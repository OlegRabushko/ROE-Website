{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","assets/images/img1.png","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","error","profile","onSubmit","className","style","profileDataBtn","formSummaryError","createField","Input","type","Textarea","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","s","editBtn","onClick","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","src","photos","large","userPhoto","mainPhoto","editPhoto","editPhotoInput","target","files","length","profileStatus","initialValues","formData","then","Post","item","container","myPhoto","textContainer","text","message","likesNum","like","likesCount","maxLength30","maxLengthCreator","AddNewPostFormRedux","Field","textarea","name","component","placeholder","validate","required","postBtn","MyPosts","React","memo","postsElements","posts","reverse","map","p","key","id","createRef","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.28d5cfc5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1NSIz\",\"mainPhoto\":\"ProfileInfo_mainPhoto__2IZzh\",\"contact\":\"ProfileInfo_contact__3J6r-\",\"editBtn\":\"ProfileInfo_editBtn__3iOzJ\",\"profileStatus\":\"ProfileInfo_profileStatus__R1gyk\",\"editPhoto\":\"ProfileInfo_editPhoto__1g2MO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__mT9ux\",\"posts\":\"MyPosts_posts__3rLH4\",\"postBtn\":\"MyPosts_postBtn__J10xD\",\"textarea\":\"MyPosts_textarea__1qm4S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__XZPHp\",\"likesNum\":\"Post_likesNum__26gDg\",\"like\":\"Post_like__1IW1G\",\"textContainer\":\"Post_textContainer__2YUwp\",\"text\":\"Post_text__24Ppo\",\"container\":\"Post_container__1FQiy\"};","module.exports = __webpack_public_path__ + \"static/media/img1.f6857361.png\";","import React, {useState, useEffect} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <b>Status: </b> <span onDoubleClick={ activateEditMode }>{props.status || \"-------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\r\n                       value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport { createField, Input, Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button className={style.profileDataBtn}>save</button></div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n        </div>\r\n\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n\r\n\r\n        <div>\r\n            <b>About me</b>:\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, { useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n                <div className={s.editPhoto}>\r\n                    {isOwner && <input className={s.editPhotoInput} type={\"file\"} onChange={onMainPhotoSelected} />}\r\n                </div>\r\n                <div className={s.profileStatus}>\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n                </div>\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                    : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner} />}\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n    return <div>\r\n\r\n        <div>\r\n            <b>Full name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n            </div>\r\n        }\r\n\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        {isOwner && <div><button className={s.editBtn} onClick={goToEditMode}>edit</button></div>}\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport myPhoto from '../../../../assets/images/img1.png'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <div className={s.container}>\r\n        <img src={myPhoto} />\r\n        <div className={s.textContainer}>\r\n          <div className={s.text}>\r\n            {props.message}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.likesNum}>\r\n        <span className={s.like}>like</span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field className={s.textarea} name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                validate={[required, maxLength30]} />\r\n        </div>\r\n        <div>\r\n            <button className={s.postBtn}>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount} />);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                         isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         saveProfile={props.saveProfile}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getStatus, getUserProfile, savePhoto, saveProfile, updateStatus } from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"RENDER PROFILE\");\r\n        return (\r\n            <Profile {...this.props}\r\n                isOwner={!this.props.match.params.userId}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                savePhoto={this.props.savePhoto} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    //console.log('mapStateToProps PROFILE')\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}