{"version":3,"sources":["components/Dialogs/AddMessageForm/AddMessageForm.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialogUserContainer","photoUser","to","img","dialogUser","name","Message","dialog","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","textareaContainer","Field","textarea","component","Textarea","validate","required","placeholder","messageBtn","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","newMessageBody","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"mFACAA,EAAOC,QAAU,CAAC,SAAW,iCAAiC,kBAAoB,0CAA0C,WAAa,qC,8FCc1HC,EAXI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAO,yBAAKC,UAAWC,IAAEC,qBACrB,6BAAK,kBAAC,IAAD,CAASF,UAAWC,IAAEE,UAAWC,GAAIN,GAAOD,EAAMQ,MACvD,6BACI,kBAAC,IAAD,CAASL,UAAWC,IAAEK,WAAYF,GAAIN,GAAOD,EAAMU,SCHhDC,EAJC,SAACX,GACb,OAAO,yBAAKG,UAAWC,IAAEQ,QAASZ,EAAMa,U,mDCEtCC,EAAcC,YAAiB,IAiBtBC,cAAU,CAAEC,KAAM,2BAAlBD,EAfQ,SAAChB,GACpB,OACI,0BAAMkB,SAAUlB,EAAMmB,cAClB,yBAAKhB,UAAWC,IAAEgB,mBACd,kBAACC,EAAA,EAAD,CAAOlB,UAAWC,IAAEkB,SAAUC,UAAWC,IACrCC,SAAU,CAACC,IAAUZ,GACrBa,YAAY,qBAAqBjB,KAAK,oBAE9C,6BACI,4BAAQP,UAAWC,IAAEwB,YAArB,aCyBDC,EAlCC,SAAC7B,GAEb,IAAI8B,EAAQ9B,EAAM+B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYzB,KAAMyB,EAAEzB,KAAMF,IAAK2B,EAAE3B,IAAK4B,IAAKD,EAAEjC,GAAIA,GAAIiC,EAAEjC,QAChGmC,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAAS1B,QAAS0B,EAAE1B,QAASuB,IAAKG,EAAErC,QAC9D4B,EAAMU,eAQ3B,OACI,6BACI,yBAAKrC,UAAWC,IAAE6B,SACd,yBAAK9B,UAAWC,IAAEqC,cACbT,GAEL,yBAAK7B,UAAWC,IAAEkC,UACd,yBAAKnC,UAAWC,IAAES,SAAUwB,KAIpC,6BACI,kBAAC,EAAD,CAAgBnB,SAlBR,SAACwB,GACjB1C,EAAM2C,YAAYD,EAAOF,sB,wCCb7BI,EAA6B,SAACd,GAAD,MAAY,CACzCe,OAAQf,EAAMgB,KAAKD,S,OCgBRE,sBACXC,aAdkB,SAAClB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACkB,GACtB,MAAO,CACHN,YAAa,SAACH,GACVS,EAASC,YAAmBV,UDRR,SAACW,GAAe,IAEtCC,EAFqC,uKAMnC,OAAO,kBAACD,EAAcE,KAAKrD,WANQ,GAEXsD,IAAMH,WAUtC,OAFqCH,YAAQJ,EAARI,CAAoCI,KCG9DL,CAGblB","file":"static/js/4.edddecb3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"AddMessageForm_textarea__2Hz8j\",\"textareaContainer\":\"AddMessageForm_textareaContainer__2NoAc\",\"messageBtn\":\"AddMessageForm_messageBtn__1VPF6\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialogUserContainer}>\r\n        <div><NavLink className={s.photoUser} to={path}>{props.img}</NavLink></div>\r\n        <div>\r\n            <NavLink className={s.dialogUser} to={path}>{props.name}</NavLink>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport s from './AddMessageForm.module.css'\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.textareaContainer}>\r\n                <Field className={s.textarea} component={Textarea}\r\n                    validate={[required, maxLength50]}\r\n                    placeholder='Enter your message' name=\"newMessageBody\" />\r\n            </div>\r\n            <div>\r\n                <button className={s.messageBtn}>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({ form: 'dialog-add-message-form' })(AddMessageForm);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} img={d.img} key={d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    //if (!props.isAuth) return <Redirect to={\"/login\"} /> ;\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    <div className={s.message}>{messagesElements}</div>\r\n\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <AddMessageForm onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            //if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","import React from 'react';\r\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}